library(datasets)
data(iris)
?iris
x <- iris
lapply(x,mean)
x<-iris3
lapply(x,mean)
head(iris)
x<-iris3
apply(x,c(1,2),mean)
apply(x,c(2,3),mean)
head(iris)
apply(iris,2,mean)
head(iris)
head(iris)
?apply
x <- iris
apply(x,2,mean)
apply(x[,1,4],2,mean)
apply(x[,1:4],2,mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
s <- split(mtcars, mtcars$cyl)
head(s)
lapply(s,colMeans(s[,c["mpg"]]))
lapply(s,function(x) colMeans(x[,c["mpg"]]))
lapply(s,function(x) colMeans(x[,c("mpg")]))
lapply(s,function(x) colMeans(x[,mpg]))
lapply(s,function(x) colMeans(x[,"mpg"]))
head(s)
?colMeans
lapply(s,function(x) colMeans(x[,"mpg","disp"]))
lapply(s, function(x) colMeans(x[, c("mpg","disp"]))
lapply(s, function(x) colMeans(x[, c("mpg","disp")]))
sapply(s, function(x) colMeans(x[, c("mpg","disp")]))
sapply(s, mean)
?mean
?lapply
sapply(s, mean())
sapply(s, mean(x))
sapply(s, function(x) mean(x))
sapply(s, function(x) colMeans(x[, c("mpg","disp")]))
sapply(s, function(x) colMeans(x[, c("mpg")]))
sapply(mtcars,cyl,mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg,cyl,mean))
head(s)
with(mtcars, tapply(mpg,hp,mean))
with(mtcars, tapply(hp,cyl,mean))
with(mtcars, tapply(hp,cyl,mean))[1]
with(mtcars, tapply(hp,cyl,mean))[2,1]
with(mtcars, tapply(hp,cyl,mean))[1,1]
with(mtcars, tapply(hp,cyl,mean))[1]
a <- with(mtcars, tapply(hp,cyl,mean))[1]
b <- with(mtcars, tapply(hp,cyl,mean))[3]
abs(b-a)
a
b
with(mtcars, tapply(hp,cyl,mean))(1)
number(a)
numeric(a)
debug(ls)
ls()
install.packages("ggplot2")
library(ggplot2)
install.packages("installr")
library(installr)
updateR()
q()
?matrix
lambda <-0.2
numofsims <-1000
matrix(rexp(numofsims * 10, lambda), numofsims)
A <- matrix(rexp(numofsims * 10, lambda), numofsims)
str(A)
summary(A)
set.seed(1234)
lambda = 0.2
numofsims = 1000
expdf <- data.frame(replicate(numofsims, rexp(40, lambda)))
?replicate
rexp(3,lambda)
replicate(4,rexp(3,lambda))
?transpose
??transpose
?data.frame
?replicate
?tcrossprod
X <- cbind(replicate(4,rexp(3,lambda)))
X
X <- rbind(replicate(4,rexp(3,lambda)))
X
rexp(3,lambda)
t(rexp(3,lambda))
replicate(4,t(rexp(3,lambda)))
X <- data.frame(replicate(4,t(rexp(3,lambda))))
X <- data.frame(t(rexp(3,lambda)))
X <- data.frame(t(replicate(4,rexp(3,lambda))))
X <- data.frame(t(replicate(1000,rexp(3,lambda))))
X <- data.frame(t(replicate(1000,rexp(40,lambda))))
matrix(rexp(numofsims * 10, lambda), numofsims)
A <- matrix(rexp(numofsims * 10, lambda), numofsims)
head(A)
expdf[,1:10]
expdf <- data.frame(t(replicate(numofsims, rexp(40, lambda))))
expdf[,1:10]
?apply
?matrix
expdf[,1:10]
matrix(expdf[,1:10])
as.matrix(expdf[,1:10])
?stat_function
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
?stat_function
?ggplot
?dnorm
?stat_function
expdf <- data.frame(t(replicate(numofsims, rexp(40, lambda))))
mns = apply(expdf, 1, mean)
var(mns)
expdf <- data.frame(t(replicate(numofsims, rexp(40, lambda))))
mns = apply(expdf, 1, mean)
var(mns)
expdf <- data.frame(t(replicate(numofsims, rexp(40, lambda))))
mns = apply(expdf, 1, mean)
var(mns)
expdf <- data.frame(t(replicate(numofsims, rexp(40, lambda))))
mns = apply(expdf, 1, mean)
var(mns)
expdf <- data.frame(t(replicate(numofsims, rexp(40, lambda))))
mns = apply(expdf, 1, mean)
var(mns)
expdf <- data.frame(t(replicate(numofsims, rexp(40, lambda))))
mns = apply(expdf, 1, mean)
var(mns)
expdf <- data.frame(t(replicate(numofsims, rexp(40, lambda))))
mns = apply(expdf, 1, mean)
var(mns)
expdf <- data.frame(t(replicate(numofsims, rexp(80, lambda))))
mns = apply(expdf, 1, mean)
var(mns)
expdf <- data.frame(t(replicate(6000, rexp(40, lambda))))
mns = apply(expdf, 1, mean)
var(mns)
expdf <- data.frame(t(replicate(6000, rexp(40, lambda))))
mns = apply(expdf, 1, mean)
var(mns)
expdf <- data.frame(t(replicate(6000, rexp(40, lambda))))
mns = apply(expdf, 1, mean)
var(mns)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
hist(rexp(1000,lambda))
?dnorm
cfunc <- function(x, n) sqrt(n) * (mean(x) - 5) / 5  # CLT function
dat <- data.frame(
x = c(apply(expdf[,1:2], 1, cfunc, 2),  # Apply func to 1000 obs. of 2 var
apply(expdf[,1:10], 1, cfunc, 10),  # Apply func to 1000 obs. of 10 var
apply(expdf[,1:40], 1, cfunc, 40)  # Apply func to 1000 obs. of 40 var
),
size = factor(rep(c(2, 10, 40), rep(numofsims, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) +
geom_histogram(colour = "black", binwidth = 0.2, aes(y = ..density..))
g <- g + ggtitle("Normalized Distribution of the Mean of Exponentials")
g <- g + stat_function(fun = dnorm, size = 1)  # Superimpose standard normal
print(g)
str(dat)
?rep
?factor
head(dat)
rep(1000,3)
?rep
rep(c(2, 10, 40), rep(numofsims, 3)))
rep(c(2, 10, 40), rep(numofsims, 3))
swirl()
install.packages("swirl")
library(swirl)
library(swirl)
swirl()
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., data = swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ . - Examination, swiss)
vif(mdl2)
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d, 2, 43, lower.tail = FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
mdl <- glm(ravenWinNum ~ ravenScore, family = binomial, data = ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95,1)
var(rpois(1000,50))
nxt()
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits~date, poisson, hits)
summary(mdl)
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- glm(visits~date, poisson, data = hits, offset = log(visits+1))
mdl2 <- glm(simplystats~date, poisson, data = hits, offset = log(visits+1))
qpois(.95,mdl2$fitted.values[704])
data(mtcars)
str(mtcars)
plot(mtcars$am, mtcars$mpg)
fit <- lm(mpg ~ am, mtcars)
plot(fit)
plot(mtcars$am, mtcars$mpg)
abline(fit)
?cor
cor(mtcars)
cor(mtcars)[1,]
boxplot(mtcars$mpg)
boxplot(mtcars$mpg, mtcars$am)
boxplot(mtcars$mpg[mtcars$am==0], mtcars$am)
boxplot(mtcars$mpg[mtcars$am == 0], mtcars$mpg[mtcars$am == 1])
boxplot(mpg ~ am, data = mtcars)
boxplot(mpg ~ am, data = mtcars, xlab = "Transmission")
boxplot(mpg ~ am, data = mtcars, xlab = "Transmission", ylab = "MPG")
boxplot(mpg ~ am, data = mtcars, main = "MPG by Transmission",xlab = "Transmission", ylab = "MPG")
boxplot(mpg ~ am, data = mtcars, main = "MPG by Transmission",xlab = "Transmission", ylab = "MPG", names = c("Automatic", "Manual"))
mtcars
setwd("~/R/Coursera - R Programming/RegressionModels")
pairs(mtcars)
?mtcars
?plot.lm
